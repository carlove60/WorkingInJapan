// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaitingListBackend.Database;

#nullable disable

namespace WaitingListBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250531111316_initialcreation")]
    partial class initialcreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WaitingList.Api.Backend.Entities.PartyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ServiceEndedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ServiceStartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<Guid>("WaitingListId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("WaitingListId");

                    b.ToTable("Parties", (string)null);
                });

            modelBuilder.Entity("WaitingList.Api.Backend.Entities.WaitingListEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TimeForService")
                        .HasColumnType("int");

                    b.Property<int>("TotalSeatsAvailable")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("WaitingLists");
                });

            modelBuilder.Entity("WaitingList.Api.Backend.Entities.PartyEntity", b =>
                {
                    b.HasOne("WaitingList.Api.Backend.Entities.WaitingListEntity", "WaitingListEntity")
                        .WithMany("Parties")
                        .HasForeignKey("WaitingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WaitingListEntity");
                });

            modelBuilder.Entity("WaitingList.Api.Backend.Entities.WaitingListEntity", b =>
                {
                    b.Navigation("Parties");
                });
#pragma warning restore 612, 618
        }
    }
}
